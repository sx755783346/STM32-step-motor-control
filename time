//time.c
#include "time.h"
#include "stm32f10x.h"
#include "sys.h"

// initialization of timer
void TIM4_PWM_Init(u16 arr,u16 psc)
{
	GPIO_InitTypeDef GPIO_InitStrue;   
	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;  
	TIM_OCInitTypeDef TIM_OCInitStructure;
	
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_AFIO,ENABLE); //multiplex clock enable
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);  // enable clock for TIM4

	GPIO_InitStrue.GPIO_Mode=GPIO_Mode_AF_PP;
	GPIO_InitStrue.GPIO_Pin=GPIO_Pin_9;
	GPIO_InitStrue.GPIO_Speed=GPIO_Speed_50MHz;
	GPIO_Init(GPIOB,&GPIO_InitStrue);
	
	TIM_TimeBaseStructure.TIM_Period = arr;  
	TIM_TimeBaseStructure.TIM_Prescaler =psc;  
	TIM_TimeBaseStructure.TIM_ClockDivision = 0; 
	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; 
	TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure); // TIM initialization
	
	TIM_OCInitStructure.TIM_OCMode=TIM_OCMode_PWM2;  //PWM mode 2
	TIM_OCInitStructure.TIM_OCPolarity=TIM_OCPolarity_High;  // enable output compare
	TIM_OCInitStructure.TIM_OutputState=TIM_OutputState_Enable; // high output polarity
	TIM_OC4Init(TIM4,&TIM_OCInitStructure);  //initialization TIM4 OC4
	
	TIM_OC4PreloadConfig(TIM4, TIM_OCPreload_Enable);
	TIM_Cmd(TIM4,ENABLE);  //enable TIM4
}
